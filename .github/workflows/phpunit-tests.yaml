name: phpunit-tests

on:
  pull_request:
    branches: [main]

jobs:
  test-company:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: company/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('company/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          cd company
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup .env.testing and DB
        run: |
          cd company
          cp .env.testing.example .env.testing
          php artisan key:generate --env=testing
          touch database/{company.sqlite,student.sqlite,common.sqlite}

      - name: Run tests
        run: |
          cd company
          php artisan test --filter "AuthenticationTest|EmailVerificationTest|PasswordConfirmationTest|PasswordResetTest|PasswordUpdateTest|RegistrationTest"

  test-student:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: student/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('student/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          cd student
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup .env.testing and DB
        run: |
          cd student
          cp .env.testing.example .env.testing
          php artisan key:generate --env=testing
          touch database/{company.sqlite,student.sqlite,common.sqlite}

      - name: Run tests
        run: |
          cd student
          php artisan test --filter "AuthenticationTest|EmailVerificationTest|PasswordConfirmationTest|PasswordResetTest|PasswordUpdateTest|RegistrationTest"
